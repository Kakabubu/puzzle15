:root {
    --image-margin: 5px; /* Define a CSS variable for the image margin */
    --font-size: calc(1.5vw + 1.5vh); /* Define a CSS variable for scalable font size */
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-family: 'Roboto', sans-serif; /* Use a more readable font */
}

body {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100vh;
    background-color: #f4f4f4;
    padding: 20px;
    margin: 0;
    overflow: hidden; /* Prevent scrolling */
}

h1 {
    font-size: 2.5em;
    text-align: center;
    margin-bottom: 20px; /* Add more space below the header */
    white-space: nowrap; /* Prevent text from wrapping */
    overflow: hidden; /* Hide overflow text */
    text-overflow: ellipsis; /* Add ellipsis for overflow text */
    max-width: 100%; /* Ensure it fits within the screen */
}

p {
    font-size: 1.5em;
    text-align: justify;
    line-height: 1.6; /* Add line height for better readability */
    text-indent: 1em; /* Add spacing at the start of paragraphs */
    margin-bottom: 20px; /* Add space between paragraphs */
}

#codeInput {
    font-size: var(--font-size); /* Use scalable font size */
    padding: 12px;
    width: 75%; /* Set width to 75% of the puzzle container */
    max-width: calc(100vw - 30px);
    border: 2px solid #333;
    border-radius: var(--image-margin);
    outline: none;
    margin-bottom: 10px; /* Add margin to separate from the button */
}

#resetButton {
    padding: 15px 30px;
    font-size: var(--font-size); /* Use scalable font size */
    cursor: pointer;
    width: 75%; /* Set width to 75% of the puzzle container */
    max-width: calc(100vw - 30px);;
    margin-top: 10px;
    border: 2px solid #333;
    border-radius: var(--image-margin);
}

/* Prevent zooming when input is focused */
@media screen and (max-width: 600px) {
    #codeInput {
        font-size: 18px;
    }
    #resetButton {
        font-size: 18px;
    }
    h1 {
        font-size: 2em;
        white-space: normal; /* Allow text to wrap */
    }
    p {
        font-size: 1.2em;
    }
}

/* Puzzle container */
#puzzle-container {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 5px;
    width: calc(100vw - 30px); /* Adjust to fit within the viewport width */
    max-width: calc(100vh - 150px); /* Adjust to fit within the viewport height */
    aspect-ratio: 1; /* Ensure it remains square */
    margin-top: var(--font-size);
    margin-bottom: var(--font-size);
    background-color: #ddd;
    flex-shrink: 0; /* Ensure it doesn't shrink */
}

/* Puzzle tiles */
.tile {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    aspect-ratio: 1; /* Ensure tiles are always square */
    font-size: 16px; /* Adjust font size to fit smaller tiles */
    background-color: white;
    border: 2px solid #333;
    border-radius: 5px;
    user-select: none;
    transition: 0.2s;
    position: relative; /* Ensure tiles can be positioned over the background tile */
    z-index: 1; /* Ensure tiles are above the background tile */
}

.tile img {
    width: calc(100% - var(--image-margin) * 2); /* Resize images to be smaller */
    height: calc(100% - var(--image-margin) * 2); /* Resize images to be smaller */
    object-fit: cover; /* Ensure images fit within the tiles */
    margin: var(--image-margin); /* Center the images within the tiles */
}

.tile.hidden {
    background-color: #ccc;
    color: transparent;
}

.tile.background {
    opacity: 0.5; /* Set transparency to 50% */
    z-index: 0; /* Ensure the background tile is below other tiles */
   /** background-color: #f0f0f0; /* Example background color */
    /** border: 2px solid #ccc; /* Example border */
}

.large-button {
    padding: 15px 30px;
    font-size: 18px;
    cursor: pointer;
}
